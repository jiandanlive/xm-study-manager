{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport E from 'wangeditor';\nexport default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      editor: null,\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 5,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      recommend: null,\n      fromVisible: false,\n      form: {},\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入资料名称',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  mounted() {\n    this.load(1);\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    initWangEditor(content) {\n      this.$nextTick(() => {\n        this.editor = new E('#editor');\n        this.editor.config.placeholder = '请输入内容';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload';\n        this.editor.create();\n        setTimeout(() => {\n          this.editor.txt.html(content);\n        });\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {\n        userId: this.user.id\n      };\n      this.fromVisible = true; // 打开弹窗\n      this.initWangEditor('');\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n      this.initWangEditor(this.form.content || '');\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.status = '待审核';\n          this.form.descr = '';\n          this.form.content = this.editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/information/update' : '/information/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/information/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/information/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/information/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          userId: this.user.id\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n    handleImgSuccess(res) {\n      this.form.img = res.data;\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    }\n  }\n};","map":{"version":3,"names":["E","data","user","JSON","parse","localStorage","getItem","editor","tableData","pageNum","pageSize","total","name","recommend","fromVisible","form","rules","required","message","trigger","ids","mounted","load","methods","initWangEditor","content","$nextTick","config","placeholder","uploadFileName","uploadImgServer","create","setTimeout","txt","html","handleAdd","userId","id","handleEdit","row","stringify","save","$refs","formRef","validate","valid","status","descr","$request","url","method","then","res","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","delBatch","length","warning","get","params","list","handleCurrentChange","handleSelectionChange","rows","map","v","handleImgSuccess","img","reset"],"sources":["src/views/front/MyInfo.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <div style=\"width: 80%; margin: 30px auto\">\n      <div style=\"margin: 20px 0\">\n        <el-input placeholder=\"请输入资料名称\" style=\"width: 200px\" size=\"mini\" v-model=\"name\"></el-input>\n        <el-button type=\"info\" plain style=\"margin-left: 10px\" size=\"mini\" @click=\"load(1)\">查询</el-button>\n        <el-button type=\"warning\" plain style=\"margin-left: 10px\" size=\"mini\" @click=\"reset\">重置</el-button>\n        <el-button type=\"primary\" plain size=\"mini\" @click=\"handleAdd\">发布资料</el-button>\n        <el-button type=\"danger\" plain size=\"mini\" @click=\"delBatch\">批量删除</el-button>\n      </div>\n\n      <div class=\"table\">\n        <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\n          <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n          <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\n          <el-table-column prop=\"img\" label=\"资料封面\" width=\"100\">\n            <template v-slot=\"scope\">\n              <div style=\"display: flex; align-items: center\">\n                <el-image style=\"width: 60px; height: 40px; border-radius: 10px\" v-if=\"scope.row.img\"\n                          :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"name\" label=\"资料名称\" width=\"250\" show-overflow-tooltip></el-table-column>\n          <el-table-column prop=\"userName\" label=\"上传用户\"></el-table-column>\n          <el-table-column prop=\"time\" label=\"上传时间\"></el-table-column>\n          <el-table-column prop=\"recommend\" label=\"是否推荐\"></el-table-column>\n          <el-table-column prop=\"score\" label=\"所需积分\"></el-table-column>\n          <el-table-column prop=\"status\" label=\"审核状态\"></el-table-column>\n          <el-table-column prop=\"descr\" label=\"审核说明\"></el-table-column>\n\n          <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n            <template v-slot=\"scope\">\n              <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\n              <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <div class=\"pagination\" style=\"margin-top: 20px\">\n          <el-pagination\n              background\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"pageNum\"\n              :page-sizes=\"[5, 10, 20]\"\n              :page-size=\"pageSize\"\n              layout=\"total, prev, pager, next\"\n              :total=\"total\">\n          </el-pagination>\n        </div>\n      </div>\n    </div>\n\n    <el-dialog title=\"课程信息\" :visible.sync=\"fromVisible\" width=\"55%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"资料封面\">\n          <el-upload\n              class=\"avatar-uploader\"\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              list-type=\"picture\"\n              :on-success=\"handleImgSuccess\"\n          >\n            <el-button type=\"primary\">上传图片</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item prop=\"name\" label=\"资料名称\">\n          <el-input v-model=\"form.name\" autocomplete=\"off\" placeholder=\"请输入资料名称\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"score\" label=\"所需积分\">\n          <el-input v-model=\"form.score\" autocomplete=\"off\" placeholder=\"请输入积分（0表示无需积分）\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"file\" label=\"资料链接\">\n          <el-input v-model=\"form.file\" autocomplete=\"off\" placeholder=\"请输入资料链接\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"content\" label=\"资料介绍\">\n          <div id=\"editor\"></div>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport E from 'wangeditor'\nexport default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      editor: null,\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 5,  // 每页显示的个数\n      total: 0,\n      name: null,\n      recommend: null,\n      fromVisible: false,\n      form: {},\n      rules: {\n        name: [\n          {required: true, message: '请输入资料名称', trigger: 'blur'},\n        ]\n      },\n      ids: []\n    }\n  },\n  mounted() {\n    this.load(1)\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    initWangEditor(content) {\n      this.$nextTick(() => {\n        this.editor = new E('#editor')\n        this.editor.config.placeholder = '请输入内容'\n        this.editor.config.uploadFileName = 'file'\n        this.editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload'\n        this.editor.create()\n        setTimeout(() => {\n          this.editor.txt.html(content)\n        })\n      })\n    },\n    handleAdd() {   // 新增数据\n      this.form = {\n        userId: this.user.id,\n      }\n      this.fromVisible = true   // 打开弹窗\n      this.initWangEditor('')\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n      this.initWangEditor(this.form.content || '')\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.form.status = '待审核'\n          this.form.descr = ''\n          this.form.content = this.editor.txt.html()\n          this.$request({\n            url: this.form.id ? '/information/update' : '/information/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/information/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/information/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/information/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          userId: this.user.id\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)   //  [1,2]\n    },\n    handleImgSuccess(res) {\n      this.form.img = res.data\n    },\n    reset() {\n      this.name = null\n      this.load(1)\n    },\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}