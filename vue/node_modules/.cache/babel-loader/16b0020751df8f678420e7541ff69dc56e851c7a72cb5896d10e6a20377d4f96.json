{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 6,\n      // 每页显示的个数\n      total: 0,\n      name: null\n    };\n  },\n  mounted() {\n    this.load(1);\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/scoreorder/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          userId: this.user.id\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["data","user","JSON","parse","localStorage","getItem","tableData","pageNum","pageSize","total","name","mounted","load","methods","$request","get","params","userId","id","then","res","list","reset","handleCurrentChange"],"sources":["src/views/front/ScoreOrder.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <div style=\"width: 70%; margin: 30px auto\">\n      <div style=\"margin: 20px 0\">我兑换过的课程（{{total}}）</div>\n      <div class=\"table\">\n        <el-table :data=\"tableData\" stripe>\n          <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\n          <el-table-column prop=\"scoreImg\" label=\"课程封面\" width=\"100\">\n            <template v-slot=\"scope\">\n              <div style=\"display: flex; align-items: center\">\n                <el-image style=\"width: 60px; height: 40px; border-radius: 10px\" v-if=\"scope.row.scoreImg\"\n                          :src=\"scope.row.scoreImg\" :preview-src-list=\"[scope.row.scoreImg]\"></el-image>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"courseName\" label=\"课程名称\" width=\"300\" show-overflow-tooltip>\n            <template v-slot=\"scope\">\n              <a :href=\"'/front/scoreDetail?id=' + scope.row.scoreId\">{{ scope.row.scoreName }}</a>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"score\" label=\"兑换积分\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"orderId\" label=\"订单编号\" width=\"200\"></el-table-column>\n          <el-table-column prop=\"time\" label=\"兑换时间\" width=\"200\"></el-table-column>\n        </el-table>\n\n        <div class=\"pagination\" style=\"margin-top: 20px\">\n          <el-pagination\n              background\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"pageNum\"\n              :page-sizes=\"[5, 10, 20]\"\n              :page-size=\"pageSize\"\n              layout=\"total, prev, pager, next\"\n              :total=\"total\">\n          </el-pagination>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n\nexport default {\n\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 6,  // 每页显示的个数\n      total: 0,\n      name: null,\n    }\n  },\n  mounted() {\n    this.load(1)\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/scoreorder/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          userId: this.user.id,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.name = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n  }\n}\n</script>\n"],"mappings":"AA0CA;EAEAA,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACA;EACAC,OAAA;IACAD,KAAAL,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAO,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAT,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAS,MAAA,OAAAhB,IAAA,CAAAiB;QACA;MACA,GAAAC,IAAA,CAAAC,GAAA;QACA,KAAAd,SAAA,GAAAc,GAAA,CAAApB,IAAA,EAAAqB,IAAA;QACA,KAAAZ,KAAA,GAAAW,GAAA,CAAApB,IAAA,EAAAS,KAAA;MACA;IACA;IACAa,MAAA;MACA,KAAAZ,IAAA;MACA,KAAAE,IAAA;IACA;IACAW,oBAAAhB,OAAA;MACA,KAAAK,IAAA,CAAAL,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}